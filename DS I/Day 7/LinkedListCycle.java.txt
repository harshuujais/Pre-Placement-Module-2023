/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
        try{
            while(slow!=null || fast!=null){
                fast = fast.next.next;
                slow=slow.next;
                if(fast==slow)
                    return true;
            }
        }
        catch(Exception e){
            return false;
        }
        return false;
    }
}